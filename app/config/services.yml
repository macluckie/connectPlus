# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    AppBundle\Mailer\Mailer:
        arguments:
            $setFrom: '%mailer_user%'
            
    AppBundle\Service\ResizerPicture:
        class: AppBundle\Service\ResizerPicture
        arguments:
           $projectDir: '%kernel.project_dir%'




    app.form.registration:
            class: AppBundle\Form\RegistrationType
            tags:
                - { name: form.type, alias: app_user_registration}


    admin.Game:
            class: AppBundle\Admin\GameAdmin
            arguments: [~, AppBundle\Entity\Game, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Game }
            public: true

    admin.Console:
                class: AppBundle\Admin\ConsoleAdmin
                arguments: [~, AppBundle\Entity\Console, ~]
                tags:
                    - { name: sonata.admin, manager_type: orm, label: Console }
                public: true


    admin.Salle:
      class: AppBundle\Admin\SalleAdmin
      arguments: [~, AppBundle\Entity\Salle, ~]
      tags:
      - { name: sonata.admin, manager_type: orm, label: Salle }
      public: true


    admin.Service:
      class: AppBundle\Admin\ServiceAdmin
      arguments: [~, AppBundle\Entity\Service, ~]
      tags:
          - { name: sonata.admin, manager_type: orm, label: Service }
      public: true  


    admin.Footer:
        class: AppBundle\Admin\FooterAdmin
        arguments: [~, AppBundle\Entity\Footer, ~]
        calls:
            - [setTemplate, ['edit', 'FooterAdmin/edit.html.twig']]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Footer }
        public: true
  
